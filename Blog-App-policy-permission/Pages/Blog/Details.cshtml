@page
@model Blog_App_policy_permission.Pages.Blog.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Blog</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.Content)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog.CreatedOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.CreatedOn)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog.Published)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.Published)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog.Draft)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.Draft)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog.Image)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.Image)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.Status)
        </dd>
    </dl>
</div>

@if (Model.Blog.Status != BlogStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
 User, "Permissions.Posts.Approve")).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Blog.Id" />
            <input type="hidden" name="status" value="@BlogStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}

@if (Model.Blog.Status != BlogStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
 User, "Permissions.Posts.Reject")).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Blog.Id" />
            <input type="hidden" name="status" value="@BlogStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-danger">Reject</button>
        </form>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(
     User, Model.Blog,
     "Permissions.Posts.Edit")).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Blog.Id">Edit</a>
        <text> | </text>
    }
    <a asp-page="./Index">Back to List</a>
</div>